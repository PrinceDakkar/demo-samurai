{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","paths","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","DialogsPage","dialogsElements","dialogs","map","messagesElements","messages","newMessageBody","isAuth","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dialogsPage","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,OAAS,0B,6ECalKC,EAXI,SAACC,GAClB,IAAIC,EAAQ,YAAcD,EAAME,GAEhC,OACE,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACE,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAqBD,EAAMQ,UCClBC,EANC,SAACT,GACf,OACE,qBAAKG,UAAWC,IAAEC,OAAlB,SAA2BL,EAAMU,W,iDCuC/BC,EAAcC,YAAiB,IAkB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAACd,GACtB,OACE,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACA,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAChBC,SAAU,CAACC,IAASX,GACpBH,KAAM,iBACNe,YAAa,yBAEnB,8BACE,mDAQSC,EApDC,SAACxB,GACf,IAAIyB,EAAQzB,EAAM0B,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACxB,GAAD,OACtC,cAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMN,GAAIG,EAAOH,IAASG,EAAOH,OAGxD4B,EAAmBL,EAAMM,SAASF,KAAI,SAACnB,GAAD,OACxC,cAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQR,OAG7BuB,EAAMO,eAQ7B,OAAmB,GAAhBhC,EAAMiC,OAAwB,cAAC,IAAD,CAAU1B,GAAI,WAG3C,sBAAKJ,UAAWC,IAAEwB,QAAlB,UACE,qBAAKzB,UAAWC,IAAE8B,aAAlB,SAAiCP,IACjC,qBAAKxB,UAAWC,IAAE2B,SAAlB,SACE,8BAAMD,MAGR,cAACjB,EAAD,CAAqBG,SAfL,SAACmB,GACnBnC,EAAMoC,YAAYD,EAAOH,uB,+DCrBzBK,EAA6B,SAACZ,GAAD,MAAU,CACvCQ,OAAQR,EAAMa,KAAKL,S,OCwBRM,sBACbC,aAlBoB,SAACf,GACrB,MAAO,CACLC,YAAaD,EAAMgB,gBAKE,SAACC,GACxB,MAAO,CACLN,YAAa,SAACJ,GACZU,EAASC,YAAmBX,UDdF,SAACY,GAAc,IACrCC,EADoC,4JAE1C,WACI,OAAyB,IAAtBC,KAAK9C,MAAMiC,OAAyB,cAAC,IAAD,CAAU1B,GAAI,WAC9C,cAACqC,EAAD,eAAeE,KAAK9C,YAJW,GACV+C,IAAMH,WAStC,OADuCJ,YAAQH,EAARG,CAAoCK,KCYhEN,CAGXf","file":"static/js/4.bb9d3131.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2v7Vv\",\"dialogsItems\":\"Dialogs_dialogsItems__2zqny\",\"active\":\"Dialogs_active__3kNuO\",\"messages\":\"Dialogs_messages__StO1p\",\"dialog\":\"Dialogs_dialog__qCYGf\"};","import s from './../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst DialogItem = (props) => {\r\n  let paths = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={s.dialog + ' ' + s.active}>\r\n      <NavLink to={paths}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default DialogItem","import s from './../Dialogs.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.dialog}>{props.message}</div>\r\n  )\r\n}\r\n\r\nexport default Message","import s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {\r\n  sendMessageCreator,\r\n  updateNewMessageBodyCreator,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.DialogsPage;\r\n  let dialogsElements = state.dialogs.map((dialog) => (\r\n    <DialogItem name={dialog.name} id={dialog.id} key={dialog.id} />\r\n  ));\r\n\r\n  let messagesElements = state.messages.map((message) => (\r\n    <Message message={message.message} key={message.id} />\r\n  ));\r\n\r\n  let newMessageBody = state.newMessageBody;\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  };\r\n\r\n\r\n\r\nif(props.isAuth == false) return <Redirect to={\"/login\"}/>\r\n  \r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n   \r\n      </div>\r\n      <AddMessageFormRedux onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) =>{\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n        <Field component={Textarea}\r\n          validate={[required,maxLength50 ]}\r\n          name={\"newMessageBody\"} \r\n          placeholder={\"Enter your message\"}/>\r\n    </div>\r\n    <div>\r\n      <button>Sen3d</button>\r\n    </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state)=>({\r\n    isAuth: state.auth.isAuth\r\n  });\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n    render(){\r\n        if(this.props.isAuth === false) return <Redirect to={\"/login\"}/>\r\n        return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n   \r\n      let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}","import s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {\r\n  sendMessageCreator,\r\n  updateNewMessageBodyCreator,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from 'react-redux';\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n  return {\r\n    DialogsPage: state.dialogsPage,\r\n\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody))\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default compose( \r\n  connect(mapStateToProps,mapDispatchToProps),\r\n  withAuthRedirect\r\n  )(Dialogs)\r\n"],"sourceRoot":""}