{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","profileImg","src","descriptionBlock","photos","large","Preloader","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostForm","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","reduxForm","form","MyPosts","console","log","postsElements","posts","map","p","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostCreator","myPosts","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,WAAa,kC,oBCAxFD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,0CCAnED,EAAOC,QAAU,CAAC,KAAO,qB,+KCGGC,IAAMC,U,QCsCnBC,EAtCgB,SAACC,GAE5B,MAA8BC,oBAAS,GAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAA0BF,mBAASD,EAAMI,QAAzC,mBAAKA,EAAL,KAAaC,EAAb,KAEAC,qBAAU,WACRD,EAAUL,EAAMI,UACf,CAACJ,EAAMI,SAeV,OACE,iCACIF,GACA,8BACE,uBAAMK,cAjBW,WACvBJ,GAAY,IAgBN,UAAwCH,EAAMI,QAAU,QAAxD,SAGHF,GACC,8BACE,uBAAOM,SAbQ,SAACC,GACtBJ,EAAUI,EAAEC,cAAcC,QAYaC,WAAW,EAAMC,OAlB/B,WACzBV,GAAY,GACZH,EAAMc,aAAaV,IAgBiEO,MAAOP,UCZlFW,EAlBK,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,QAAQZ,EAA0B,EAA1BA,OAAQU,EAAkB,EAAlBA,aACpC,OAAKE,EAKH,gCACE,qBAAKC,UAAWC,IAAEC,WAAlB,SACE,qBAAKC,IAAI,6IAEX,sBAAKH,UAAWC,IAAEG,iBAAlB,UACE,qBAAKD,IAAKJ,EAAQM,OAAOC,QACzB,cAAC,EAAD,CAAwBnB,OAAQA,EAAQU,aAAcA,UAVnD,cAACU,EAAA,EAAD,K,oCCQIC,EAbF,SAACzB,GACZ,OAEE,sBAAKiB,UAAWC,IAAEQ,KAAlB,UACE,qBAAKN,IAAI,yFACRpB,EAAM2B,QACP,8BACE,yCAAY3B,EAAM4B,oB,iCCDpBC,EAAcC,YAAiB,IA6BjCC,EAAiB,SAAC/B,GACpB,OACE,uBAAMgC,SAAUhC,EAAMiC,aAAtB,UACA,8BACE,cAACC,EAAA,EAAD,CAAOC,KAAM,cAAeC,UAAWC,IAAUC,YAAa,eAC7DC,SAAU,CAACC,IAAUX,OAExB,8BACE,qDAMNE,EAAiBU,YAAU,CAACC,KAAM,yBAAjBD,CAA2CV,GAE7CY,MA3CC,SAAC3C,GAEf4C,QAAQC,IAAI,UACZ,IAAIC,EACF9C,EAAM+C,MAAMC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAMtB,QAASsB,EAAEtB,QAASC,WAAYqB,EAAErB,gBAQ/D,OACE,gCACE,qBAAKX,UAAWC,IAAEgC,WAAlB,SACE,4CAIA,cAAC,EAAD,CAAgBlB,SAXN,SAACmB,GACfnD,EAAMoD,QAAQD,EAAOE,gBAWnB,qBAAKpC,UAAWC,IAAE6B,MAAlB,SAEGD,QCLMQ,EADUC,aAfH,SAACC,GACrB,MAAO,CACLT,MAAOS,EAAMC,YAAYV,MACzBM,YAAaG,EAAMC,YAAYJ,gBAIV,SAACK,GACxB,MAAO,CACLN,QAAS,SAACC,GACRK,EAASC,YAAeN,QAKLE,CAA4CK,GCXtDC,EAVC,SAAC7D,GAEf,OACE,gCACE,cAAC,EAAD,CAAagB,QAAShB,EAAMgB,QAASZ,OAAQJ,EAAMI,OAAQU,aAAcd,EAAMc,eAC/E,cAAC,EAAD,QCDAgD,E,uKACJ,WACE,IAAIC,EAASC,KAAKhE,MAAMiE,MAAMC,OAAOH,OAChCA,IACHA,EAASC,KAAKhE,MAAMmE,mBAElBH,KAAKhE,MAAMoE,QAAQC,KAAK,UAG7BL,KAAKhE,MAAMsE,eAAeP,GAC1BC,KAAKhE,MAAMuE,UAAUR,K,oBAGtB,WAEA,OACI,cAAC,EAAD,2BAAaC,KAAKhE,OAAlB,IACAgB,QAASgD,KAAKhE,MAAMgB,QACpBZ,OAAQ4D,KAAKhE,MAAMI,OACnBU,aAAckD,KAAKhE,MAAMc,oB,GAnBAjB,IAAMC,WAiCtB0E,sBACbjB,aAToB,SAACC,GAAD,MAAU,CAC9BxC,QAASwC,EAAMC,YAAYzC,QAC3BZ,OAAQoD,EAAMC,YAAYrD,OAC1B+D,iBAAkBX,EAAMiB,KAAKV,OAC7BW,OAAQlB,EAAMiB,KAAKC,UAKK,CAACJ,mBAAgBC,cAAWzD,mBACpD6D,IAFaH,CAEDV","file":"static/js/3.09ac03fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ARxd8\",\"profileImg\":\"ProfileInfo_profileImg__24aSM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__9xKB_\",\"posts\":\"MyPosts_posts__3J-lY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1_B2h\"};","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status\r\n  };\r\n\r\n  activateEditMode = () =>{\r\n      this.setState({\r\n          editMode: true\r\n      })\r\n  }\r\n  deactivateEditMode = () =>{\r\n      this.setState({\r\n          editMode: false\r\n      });\r\n      this.props.updateStatus(this.state.status);\r\n  }\r\n  onStatusChange = (e) =>{\r\n   this.setState({\r\n      status: e.currentTarget.value\r\n   }) \r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    if (prevProps.status !== this.props.status){\r\n      this.setState({\r\n        status: this.props.status\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.editMode && (\r\n          <div>\r\n            <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-----\"}</span>\r\n          </div>\r\n        )}\r\n        {this.state.editMode && (\r\n          <div>\r\n            <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}></input>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n      setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n      setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n      setEditMode(false)\r\n      props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {!editMode &&\r\n          <div>\r\n            <span onDoubleClick={activateEditMode}>{props.status || \"-----\"} </span>\r\n          </div>\r\n        }\r\n        {editMode && (\r\n          <div>\r\n            <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}></input>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile,status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.profileImg}>\r\n        <img src=\"http://t3.gstatic.com/licensed-image?q=tbn:ANd9GcQYSibIOdUg1VOegwxLDq35TNE8I_FOo-qwyDbeXwS96iUnuWfcyR2ZquLrN2dPqJn1Gza29BUCpYUHGB7wMDQ\" />\r\n      </div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large} />\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n\r\n    <div className={s.item}>\r\n      <img src='https://lumpics.ru/wp-content/uploads/2017/11/Programmyi-dlya-sozdaniya-avatarok.png' />\r\n      {props.message}\r\n      <div>\r\n        <span>Like {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport { addPostCreator, updateNewTextCreator } from '../../../redux/profile-reducer'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post.jsx'\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  console.log(\"render\")\r\n  let postsElements =\r\n    props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} />)\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) =>{\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.postsBlock}>\r\n        <h3>my posts</h3>\r\n\r\n      </div>\r\n\r\n        <AddNewPostForm onSubmit={onAddPost} />\r\n      <div className={s.posts}>\r\n\r\n        {postsElements}\r\n      </div>\r\n    </div>)\r\n}\r\n\r\nlet AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field name={\"newPostText\"} component={Textarea} placeholder={\"Post message\"}\r\n       validate={[required, maxLength10]}/>\r\n    </div>\r\n    <div>\r\n      <button>Add post </button>\r\n    </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts","import React from \"react\";\r\nimport {\r\n  addPostCreator,\r\n  updateNewTextCreator,\r\n} from \"../../../redux/profile-reducer\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post.jsx\";\r\nimport {connect} from 'react-redux'\r\nimport myPosts from './MyPosts';\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(myPosts);\r\nexport default MyPostsContainer;\r\n","import s from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo.jsx';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { getUserProfile } from \"../../redux/profile-reducer\";\r\nimport { getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport Profile from './Profile';\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n  componentDidMount(){\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId){\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId){\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n   this.props.getUserProfile(userId);\r\n   this.props.getStatus(userId);\r\n};\r\n\r\n  render(){\r\n\r\n  return (\r\n      <Profile {...this.props} \r\n      profile={this.props.profile} \r\n      status={this.props.status} \r\n      updateStatus={this.props.updateStatus} />\r\n  )\r\n}\r\n}\r\n\r\n\r\nlet mapStateToProps = (state)=>({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,{getUserProfile, getStatus, updateStatus} ),\r\n  withRouter)(ProfileContainer)"],"sourceRoot":""}